// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model OutputFormat {
  id       String    @id @default(uuid())
  name     String
  Projects Project[]
}

model Country {
  id           String    @id @default(uuid())
  name         String
  abbreviation String
  Projects     Project[]
}

model Channel {
  id       String    @id @default(uuid())
  name     String
  Projects Project[]
}

model Color {
  id    String @id @default(uuid())
  brand String
  hex   String
}

model Addon {
  id   String @id @default(uuid())
  name String
}

model Language {
  id   String @id @default(uuid())
  name String
}

model CreativeImagePerson {
  id   String @id @default(uuid())
  name String
}

model CreativeImageScreen {
  id   String @id @default(uuid())
  name String
}

model MessagingBenefits {
  id   String @id @default(uuid())
  name String
}

model Tonality {
  id   String @id @default(uuid())
  name String
}

model AddressedGroup {
  id   String @id @default(uuid())
  name String
}

model CreativeImageText {
  id   String @id @default(uuid())
  name String
}

model Project {
  id               String   @id @default(uuid())
  name             String
  description      String?
  countryId        String
  outputFormatId   String
  collection       String
  imagesCollection String
  logoCollection   String
  badgeCollection  String
  placidTemplate   String
  channelId        String
  userId           String
  assets           Assets[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  outputFormatFK OutputFormat? @relation(fields: [outputFormatId], references: [id])
  countryFK      Country?      @relation(fields: [countryId], references: [id])
  channelFK      Channel?      @relation(fields: [channelId], references: [id])

  @@index([outputFormatId])
  @@index([countryId])
  @@index([channelId])
}

model Assets {
  id                  String   @id @default(uuid())
  project             Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId           String
  statusId            Int
  headline            String
  subline             String
  backgraundColor     String
  headlineColor       String
  sublineColor        String
  image               String
  logo                String
  badged              String
  qr                  String?
  country             String
  addOn               String?
  language            String
  creativeImagePerson String?
  creativeImageScreen String?
  messagingBenefits   String
  tonality            String
  addressedGroup      String?
  creativeImageText   String?
  uniqueText          String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@index([projectId])
}
